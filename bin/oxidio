#!/usr/bin/env php
<?php
/**
 * Copyright (C) oxidio. See LICENSE file for license details.
 */

namespace Oxidio;

use OxidEsales\Eshop\Core\{
    Module,
    Registry
};
use fn;
use Oxidio\Core\Extension;
use Symfony\Component\Yaml\Yaml;
use Traversable;

call_user_func(static function () {
    $file = file_exists($file = __DIR__ . '/../../../autoload.php') ? $file : __DIR__ . '/../vendor/autoload.php';
    /** @noinspection PhpIncludeInspection */
    exit(call_user_func(require $file, static function () {
        $cli = fn\cli([
            'cli.name' => 'oxidio/oxidio',
            'cli.commands.default' => false,
            'write' => static function(fn\Cli\IO $io) {
                return static function($it, $format = 'yaml') use($io) {
                    $it instanceof Traversable || $it = fn\map([$it]);
                    foreach ($it as $line) {
                        if ($format === 'yaml') {
                            $line = Yaml::dump($line);
                        } else if ($format === 'json') {
                            json_encode($line, JSON_PRETTY_PRINT);
                        }
                        $io->writeln((string) $line);
                    }
                };
            }
        ]);

        $cli->command('modules', static function (callable $write) {
            $dir = Registry::getConfig()->getModulesDir();
            $write(fn\map(oxNew(Module\ModuleList::class)->getModulesFromDir($dir), static function(Module\Module $module) {
                return $module->getId();
            }));
        });

        $cli->command('shop:modules', static function (callable $write, $shop = null) {
            $write(fn\map(shop($shop), static function(Extension $extension) {
                if ($extension->type !== Extension::MODULE) {
                    return null;
                }
                return fn\str('# %s: %s', $extension->id, $extension->active ? 'enabled' : 'disabled');
            }));
        });

        $cli->command('test:dml', require 'test-dml.php', ['action', 'name']);

        return $cli->run();
    }));
});
